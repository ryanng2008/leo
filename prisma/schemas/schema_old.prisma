// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}



// Google sign in:
// Name 
// Email
// no need password
// Move PFP to profile
// move Username to Profile



model Listing {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt @default(now())
  title           String    @db.VarChar(255)
  provider        Profile   @relation(fields: [providerId], references: [id])
  providerId      Int 
  description     String?   // default null
  location        String?   // default null
  hourly_rate     Int?      // default null
  tags            Tag[]     // default empty array?
  img_url_gallery String[]  // default empty array?
  creds_bullets   String[]  // default empty array?
  about_paragraph String?   // default null?
  // creator         User      @relation(fields: [userId], references: [id])
  // userId          Int       @unique
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  listings  Listing[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  name   String
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
  listings  Listing[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @db.VarChar(255) @unique
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  pfp_url   String?
  profile   Profile?
  
}




// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }


