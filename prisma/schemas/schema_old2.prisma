generator client {
  provider        = "prisma-client-js"
  // previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
  // schemas  = ["auth", "public"]
}


/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model User {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  is_anonymous                Boolean           @default(false)
  profile                     Profile?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
  @@map("users")
}

model Listing {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  title           String   @db.VarChar(255)
  description     String?
  location        String?
  hourly_rate     Int?
  creds_bullets   String[]
  about_paragraph String?
  tags            String[]
  img_url_gallery String[]
  providerId      Int
  provider        Profile  @relation(fields: [providerId], references: [id]) // profile key
  // @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Profile {
  // id                  String  @id @db.Uuid // uses google user key
  id                  Int       @id @default(autoincrement()) @unique // create key for profile
  username            String?   @unique @db.VarChar(255)
  bio                 String?
  profile_picture_url String?
  name                String?
  listings            Listing[]
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt @default(now())
  // users               User   @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction) // why is this plural man
  // @@schema("public")
  @@map("profile")
}



// encrypted_password          String?           @db.VarChar(255)
  // email_confirmed_at          DateTime?         @db.Timestamptz(6)
  // invited_at                  DateTime?         @db.Timestamptz(6)
  // confirmation_token          String?           @db.VarChar(255)
  // confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  // recovery_token              String?           @db.VarChar(255)
  // recovery_sent_at            DateTime?         @db.Timestamptz(6)
  // email_change_token_new      String?           @db.VarChar(255)
  // email_change                String?           @db.VarChar(255)
  // email_change_sent_at        DateTime?         @db.Timestamptz(6)
  // last_sign_in_at             DateTime?         @db.Timestamptz(6)
  // raw_app_meta_data           Json?
  // raw_user_meta_data          Json?
  // is_super_admin              Boolean?
  // created_at                  DateTime?         @db.Timestamptz(6)
  // updated_at                  DateTime?         @db.Timestamptz(6)
  // phone                       String?           @unique
  // phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  // phone_change                String?           @default("")
  // phone_change_token          String?           @default("") @db.VarChar(255)
  // phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  // confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  // email_change_token_current  String?           @default("") @db.VarChar(255)
  // email_change_confirm_status Int?              @default(0) @db.SmallInt
  // banned_until                DateTime?         @db.Timestamptz(6)
  // reauthentication_token      String?           @default("") @db.VarChar(255)
  // reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  // is_sso_user                 Boolean           @default(false)
  // deleted_at                  DateTime?         @db.Timestamptz(6)